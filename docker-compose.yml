version: "3.8"

services:

  # === ðŸŸ¢ Infrastructure ===

  mongo:
    image: mongo:8
    container_name: mongo-dev
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: huytran
      MONGO_INITDB_ROOT_PASSWORD: Letmein123
    volumes:
      - mongo-data:/data/db
    networks:
      - snap-cart

  redis:
    image: redis:7.2
    container_name: redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - snap-cart

  zoo1:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - snap-cart

  kafka1:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - snap-cart

  # === ðŸ§© Microservices ===

  user-service:
    build: ./services/user-service
    env_file:
      - ./services/user-service/ENV
    ports:
      - "8081:8080"
    networks:
      - snap-cart

  order-service:
    build: ./services/order-service
    env_file:
      - ./services/order-service/ENV
    ports:
      - "8082:8080"
    networks:
      - snap-cart

  product-service:
    build: ./services/product-service
    env_file:
      - ./services/product-service/ENV
    ports:
      - "8084:8080"
    networks:
      - snap-cart

  gateway:
    build: ./services/api-gateway
    env_file:
      - ./services/api-gateway/ENV
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - order-service
      - product-service
    networks:
      - snap-cart

# === Volumes ===
volumes:
  mongo-data:
  redis-data:

# === Shared external Docker network ===
networks:
  snap-cart:
    external: true
